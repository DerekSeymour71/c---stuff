We draw N discs on a plane. The discs are numbered from 0 to N − 1. 
An array A of N non-negative integers, specifying the radiuses of the discs, is given. 
The J-th disc is drawn with its center at (J, 0) and radius A[J].

J-th disc and K-th disc intersect if J ≠ K and the J-th and K-th discs have at least one common point 
(assuming that the discs contain their borders).

The figure below shows discs drawn for N = 6 and A as follows:

  A[0] = 1
  A[1] = 5
  A[2] = 2
  A[3] = 1
  A[4] = 4
  A[5] = 0
  
  My initial thought is, visually, the solution looks pretty simple. However, as per normal, the explanation is not exactly in simple english.
  
  Once you draw this, it looks relatively easy to work it out. 
  
  
 so, here's my further analysis of the problem.  Each circle's center point is the index...sigh. So A[0] starts at zero, 
 has a radius of 1, so it goes from -1 to 1. A[1] starts at 1, has a radius of 5, so it goes from -4 to 6. 
 
  

 
  A[0] = 1            
  A[1] = 5                               
  A[2] = 2        
  A[3] = 1        
  A[4] = 4        
  A[5] = 0  
  
   0,  1   =   0, 1 
   1,  5   =   1, 6
   2,  2   =   2, 4
   3,  1   =   3, 4
   4,  4   =   4, 8
   5,  0   =   5, 5


visual representation of problem

      -6    -5    -4    -3    -2    -1    0    1    2    3   4   5   6   7   8
 A                                   {         }               
 B                 {                                                 }
 C                                        {                  }
 D                                                   {       }
 E                                        {                                 }
 F                                                                {}


   
   sorted from smallest to largest
   
   -6    -5    -4    -3    -2    -1    0    1    2    3   4   5   6   7   8
  
   
  
 
 F                                                                {}
 D                                                   {       }
 A                                   {         }               
 C                                        {                  }
 E                                        {                                 }
 B                 {                                                 }
 

  

 
 nothing is really jumping out at me at the moment, whereby I won't need to do a brute-force on it (which will fail the 
 performance requirements, so no point )
 
 
 maybe if you have the smallest index -4, and the largest index 8, and you count the left brackets. What would that achieve?
 get the biggest ciricle i.e. that would be -4 to 8 encompassing everything. Then decrease it's size and count in between.
 
 Honestly, no idea right now. just guessing.
 
 intersections -- notice if you draw it like this. 2 intersections, doesn't matter which brackets belong to which circle.
 
 1  [ [] ]        
  
 2  [ [  ] [    ] ]

 2  [ [ [  ] ] ]   



 count the elipse + sum of circles?
 
 
 
A [1, 5, 2, 1, 4, 0] = 11
B [1, 1, 1, 1, 1, 0] = 8
C [1, 1, 1, 0, 1, 0] = 7
D [1, 1, 0, 1, 1, 0] = 6 

There is some kind of pattern here maybe....i.e. A-B (4-1) = 3, as I move zero, going left, it decreases the amount of intersections

And if so, maybe what you can do is concoct some kind of bitshifting algorithm.

but honestly, still struggling with this one.

ANother example, 
          
[1, 1, 1, 1, 0, 0] = 6
[1, 1, 1, 0, 1, 0] = 7
[1, 1, 1, 1, 1, 0] = 8

one question I'm asking myself, is if 
A [1, 5, 2, 1, 4, 0] = 11
B [1, 1, 1, 1, 1, 0] = 8

then what would happen if I converted A to binary in some fashion? After working out the binary for just 1,0s combos



A  [1, 1]                          1                   
B  [1, 1, 0]                       2
C  [1, 1, 1]                       3                   
D  [1, 1, 1, 0]                    4                   
E* [1, 1, 1, 1]                    5                   
F  [1, 1, 1, 1, 0]                 6                   
G  [1, 1, 1, 1, 1]                 7                   
H  [1, 1, 1, 1, 1, 0]              8
I  [1, 1, 1, 1, 1, 1]              9 
j  [1, 1, 1 ,1 ,1, 1, 0]           10


2,5,6

      [1, 1, 0]
   [1, 1, 1, 1]
[1, 1, 1, 1, 0]  

 

which becomes 

[1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0]


6 > 5 > 2
1   1   1


which in my look up table become 3, which is correct.


ok, what about 7,4,5

1,1,1

4,5,7

sorted = 1,1,1

16,10,5

16 = 10 + 6 = 

nah, brain malfunction....

I'll come back to this line of thought.
*/  
  
